import express from 'express';
import React from 'react';
import { renderToString } from 'react-dom/server'
import { match, RouterContext } from 'react-router'
import router from './router.js'    // For rendering body
import routes from './routes.json'  // For server-side rendering and rendering head

const app = express();

// Set Express's view engine to ejs. Needed to render HTML head.
app.set('view engine', 'ejs');

// Add handlers for all pages in routes.json
routes.forEach(route => {
  app.get(route.path, function(req, res) {
    match({ routes: router, location: req.path }, (error, redirectLocation, renderProps) => {
      if (error) {
        res.status(500).send(error.message)
      } else if (redirectLocation) {
        res.redirect(302, redirectLocation.pathname + redirectLocation.search)
      } else if (renderProps) {
        res.render('page', {
          title: route.title,
          body: renderToString(<RouterContext {...renderProps} />)
        });
      } else {
        res.status(404).send('Not found')
      }
    });
  });
});

// Serve the client-side bundle generated by webpack
app.use(express.static('../dist'));

// Serve other public files
app.use(express.static('../public'));

const port = process.env.PORT || 3000;
app.listen(port, function() {
  console.log("Listening on port " + port);
});
